---
- name: Install mailman via apt
  apt: name=mailman state=present

- name: install mailman config
  template: src=mm_cfg.py.j2 dest=/etc/mailman/mm_cfg.py
  notify:
    - restart mailman

- name: Gather mailman facts
  mailman_facts:
  become_user: list

- name: create site list
  command: "newlist -q {{ mailman_site_list }} {{ mailman_site_list_email }} {{ mailman_site_list_password }}"
  when: mailman_site_list not in mailman.lists

- name: create mailing lists
  shell: yes | newlist
               "--urlhost={{ item.initial_settings.urlhost | default(mailman_default_url_host) }}"
               "--emailhost={{ item.initial_settings.emailhost | default(mailman_default_email_host) }}"
               "{{ item.name }}"
               "{{ item.initial_settings.admin_email }}"
               "{{ item.initial_settings.admin_password }}"
  with_items: "{{ mailman_mailing_lists }}"
  when: item.name not in mailman.lists
  notify:
    - reload postfix

- name: create tmpfiles for new list configs
  command: mktemp
  with_items: "{{ mailman_mailing_lists }}"
  when: item.name not in mailman.lists
  register: mailman_config_tmpfiles

- name: upload new lists configs
  template: src=list_config.py.j2 dest="{{ item.stdout }}"
  with_items: "{{ mailman_config_tmpfiles.results }}"
  when: item.changed

- name: configure mailing lists
  command: config_list --inputfile "{{ item.stdout }}" "{{ item.item.name }}"
  with_items: "{{ mailman_config_tmpfiles.results }}"
  when: item.changed

- name: delete tmpfiles
  file: path="{{ item.stdout }}" state=absent
  with_items: "{{ mailman_config_tmpfiles.results }}"
  when: item.changed

- name: create www document root
  file: path=/var/www/lists state=directory

- name: install lighttpd config for mailman
  template: src=lighttpd.conf.j2 dest=/etc/lighttpd/conf-enabled/mailman.conf
  notify:
    - restart lighttpd
